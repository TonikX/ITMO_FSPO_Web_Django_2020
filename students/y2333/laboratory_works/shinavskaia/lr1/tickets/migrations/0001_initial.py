# Generated by Django 3.0.7 on 2020-06-27 15:19

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='MyUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('image', models.ImageField(default='user_default.jpg', upload_to='pic_users')),
                ('points', models.PositiveIntegerField()),
                ('user_type', models.IntegerField(choices=[(1, 'Обычный пользователь'), (2, 'Серябрянный пользователь'), (3, 'Золотов пользователь'), (4, 'Платиновый пользователь')], default=1)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Bus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=30)),
                ('usage_start_date', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='BusType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('people_capacity', models.PositiveIntegerField()),
                ('engine_capacity', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Driver',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(default='driver_default.jpg', upload_to='pic_drivers')),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('passport_number', models.PositiveIntegerField()),
                ('phone', models.CharField(max_length=30)),
                ('bio', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Ride',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('departure_datetime', models.DateTimeField(auto_now_add=True)),
                ('arrival_datetime', models.DateTimeField(auto_now_add=True)),
                ('price', models.PositiveIntegerField()),
                ('bus', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tickets.Bus')),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tickets.Driver')),
            ],
        ),
        migrations.CreateModel(
            name='Station',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('phone', models.CharField(max_length=30)),
                ('address', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_type', models.IntegerField(choices=[(1, 'Наличные'), (2, 'Безналичные'), (3, 'Баллы')], default=1)),
                ('ride', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tickets.Ride')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='ride',
            name='where',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tickets.Station'),
        ),
        migrations.AddField(
            model_name='ride',
            name='where_from',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='where_from', to='tickets.Station'),
        ),
        migrations.AddField(
            model_name='driver',
            name='rides',
            field=models.ManyToManyField(through='tickets.Ride', to='tickets.Bus'),
        ),
        migrations.AddField(
            model_name='bus',
            name='bus_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tickets.BusType'),
        ),
        migrations.AddField(
            model_name='myuser',
            name='trips',
            field=models.ManyToManyField(through='tickets.Ticket', to='tickets.Ride'),
        ),
        migrations.AddField(
            model_name='myuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
