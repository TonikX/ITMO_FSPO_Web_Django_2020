# Generated by Django 2.2.10 on 2020-11-03 15:44

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('passport_id', models.CharField(max_length=10, verbose_name='Серия и номер паспорта')),
                ('full_name', models.CharField(max_length=64, verbose_name='ФИО')),
                ('birth_date', models.DateField(verbose_name='Дата рождения')),
                ('address_registration', models.CharField(max_length=256, verbose_name='Адрес регистрация')),
                ('address_residence', models.CharField(max_length=256, verbose_name='Адрес проживания')),
                ('occupation', models.CharField(max_length=45, verbose_name='Профессия')),
                ('phones', models.CharField(max_length=60, verbose_name='Телефоны')),
                ('birth_place', models.CharField(max_length=45, verbose_name='Место рождения')),
                ('is_archived', models.BooleanField(verbose_name='Статус архивации')),
                ('archived_reason', models.CharField(max_length=60, verbose_name='Причина архивации')),
                ('discovery_info', models.CharField(max_length=256, verbose_name='Откуда узнал')),
                ('email', models.CharField(max_length=60, verbose_name='Адрес электронной почты')),
                ('comment', models.CharField(max_length=256, verbose_name='Комментарий')),
                ('comment_addition', models.CharField(max_length=256, verbose_name='Дополнительный комментарий')),
                ('balance', models.IntegerField(verbose_name='Баланс')),
                ('permanent_discount', models.IntegerField(verbose_name='Постоянная скидка')),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qty', models.IntegerField(verbose_name='Количество')),
                ('price', models.IntegerField(verbose_name='Цена')),
                ('name', models.CharField(max_length=128, verbose_name='Наименование')),
                ('group', models.CharField(max_length=128, verbose_name='Группа')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='<30 characters, letters, digits and @/./+/-/_ only.', max_length=30, unique=True, validators=[django.core.validators.RegexValidator('^[\\w.@+-]+$', 'Enter a valid username. This value may contain only letters, numbers and @/./+/-/_ characters.', 'invalid')], verbose_name='username')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
        ),
        migrations.CreateModel(
            name='Visit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(verbose_name='Дата визита')),
                ('isFirst', models.IntegerField()),
                ('reason', models.CharField(max_length=256, verbose_name='Причина')),
                ('comment', models.CharField(max_length=256, verbose_name='Комментарий')),
                ('isDiscountCardUsed', models.IntegerField()),
                ('status', models.CharField(choices=[('не пришел', 'Еще не пришел'), ('пришел', 'Пришел на прием, еще не в кресле'), ('в кресле', 'В кресле у врача'), ('отменен', 'Посещение отменено')], max_length=32)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='voznesensky_app.Client')),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('change', models.IntegerField(verbose_name='Объём')),
                ('date_time', models.DateTimeField()),
                ('comment', models.CharField(max_length=64, verbose_name='Комментарий')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='voznesensky_app.Client')),
            ],
        ),
        migrations.CreateModel(
            name='SoldItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price_actual', models.IntegerField(verbose_name='Общая цена')),
                ('date', models.DateField(verbose_name='Дата продажи')),
                ('isDiscountCardUsed', models.BooleanField(verbose_name='Предъявлена скидочная карта')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='voznesensky_app.Client')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='voznesensky_app.Item')),
            ],
        ),
        migrations.CreateModel(
            name='DiscountCard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('percent', models.IntegerField(verbose_name='Размер скидки (%)')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='voznesensky_app.Client')),
            ],
        ),
    ]
