# Generated by Django 3.0.6 on 2020-06-22 19:32

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Customers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('passport', models.CharField(max_length=60)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('category', models.CharField(choices=[('A', 'A'), ('B', 'B'), ('C', 'C')], max_length=1)),
                ('position', models.IntegerField(choices=[(1, 'cock'), (2, 'waiter')])),
                ('salary_cast', models.IntegerField(blank=True)),
            ],
            options={
                'verbose_name': 'Работник',
                'verbose_name_plural': 'Работники',
            },
        ),
        migrations.CreateModel(
            name='Dishes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dish_code', models.IntegerField()),
                ('dish_name', models.CharField(max_length=60)),
                ('price', models.IntegerField(blank=True)),
                ('cook_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restaurant_app.Customers')),
            ],
            options={
                'verbose_name': 'Блюдо',
                'verbose_name_plural': 'Блюда',
            },
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ingredient_code', models.IntegerField()),
                ('ingredient_name', models.CharField(max_length=60)),
                ('ingredient_price', models.IntegerField()),
            ],
            options={
                'verbose_name': 'Ингредиент',
                'verbose_name_plural': 'Ингредиенты',
            },
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.CharField(choices=[('13:00-14:00', '13:00-14:00'), ('14:00-15:00', '14:00-15:00'), ('15:00-16:00', '15:00-16:00'), ('16:00-17:00', '16:00-17:00'), ('17:00-18:00', '17:00-18:00'), ('18:00-19:00', '18:00-19:00'), ('20:00-21:00', '20:00-21:00')], max_length=20)),
                ('available', models.BooleanField(default=True)),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Бронирование',
                'verbose_name_plural': 'Бронирование',
            },
        ),
        migrations.CreateModel(
            name='Table',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('table_number', models.IntegerField()),
                ('reservation_time', models.ManyToManyField(to='restaurant_app.Reservation')),
                ('waiter_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restaurant_app.Customers')),
            ],
            options={
                'verbose_name': 'Стол',
                'verbose_name_plural': 'Столы',
            },
        ),
        migrations.AddField(
            model_name='reservation',
            name='table_reservation',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='restaurant_app.Table'),
        ),
        migrations.CreateModel(
            name='Purchase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('purchase_code', models.IntegerField(unique=True)),
                ('volume_purchase', models.IntegerField()),
                ('count_prod', models.IntegerField()),
                ('product_stock', models.IntegerField()),
                ('supplier', models.CharField(max_length=30)),
                ('ingredient_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restaurant_app.Ingredient')),
            ],
            options={
                'verbose_name': 'Склад',
                'verbose_name_plural': 'Склад',
            },
        ),
        migrations.CreateModel(
            name='Orders',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_code', models.IntegerField()),
                ('date_order', models.DateField()),
                ('dishes', models.ManyToManyField(to='restaurant_app.Dishes')),
            ],
            options={
                'verbose_name': 'Заказ',
                'verbose_name_plural': 'Заказы',
            },
        ),
        migrations.AddField(
            model_name='dishes',
            name='ingredients',
            field=models.ManyToManyField(to='restaurant_app.Ingredient'),
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(blank=True, max_length=15, null=True, unique=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Клиент',
                'verbose_name_plural': 'Клиенты',
            },
        ),
    ]
